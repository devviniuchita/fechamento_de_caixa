#!/usr/bin/env bash

MANUS_DIR=".manus"
TASKS_FILE="$MANUS_DIR/tasks.json"
STATUS_FILE="$MANUS_DIR/context/project_status.json"
SPRINT_FILE="$MANUS_DIR/context/current_sprint.md"

print_next_task() {
  jq -r '
    .sprints[] | select(.status=="em andamento") | 
    .tarefas[] | select(.status=="pendente") | 
    "\(.id): \(.descricao)"
  ' "$TASKS_FILE" | head -n 1
}

mark_task_done() {
  local task_id=$1
  jq "(.sprints[].tarefas[] | select(.id==\"$task_id\")).status = \"concluída\"" "$TASKS_FILE" > "$TASKS_FILE.tmp" && mv "$TASKS_FILE.tmp" "$TASKS_FILE"
  echo "✅ Tarefa $task_id marcada como concluída."
}

generate_prompt() {
  local component=$1
  case "$component" in
    model)
      cat <<EOF
@manus {
  "action": "generate",
  "component": "model",
  "name": "FechamentoCaixa",
  "fields": [
    {"name": "id", "type": "String"},
    {"name": "data", "type": "LocalDateTime"},
    {"name": "usuario", "type": "Usuario"},
    {"name": "valorInicial", "type": "BigDecimal"},
    {"name": "entradas", "type": "List<FormaPagamento>"},
    {"name": "saidas", "type": "List<Despesa>"},
    {"name": "valorFinal", "type": "BigDecimal"},
    {"name": "observacoes", "type": "String"},
    {"name": "status", "type": "StatusFechamento"}
  ]
}
EOF
      ;;
    service)
      cat <<EOF
@manus {
  "action": "generate",
  "component": "service",
  "name": "FechamentoCaixa",
  "operations": [
    {"name": "criar", "params": ["FechamentoCaixaRequest"]},
    {"name": "buscarPorId", "params": ["String"]},
    {"name": "listarTodos", "params": []},
    {"name": "atualizar", "params": ["String", "FechamentoCaixaRequest"]},
    {"name": "fechar", "params": ["String"]},
    {"name": "conferir", "params": ["String"]}
  ]
}
EOF
      ;;
    controller)
      cat <<EOF
Manus: gerar controller para FechamentoCaixa com endpoints para criar, listar, buscar por ID, atualizar, fechar e conferir. Incluir controle de acesso por perfil e validação de dados.
EOF
      ;;
    *)
      echo "❌ Componente inválido. Use: model, service ou controller."
      ;;
  esac
}

print_status() {
  echo "📊 STATUS DO PROJETO"
  cat "$STATUS_FILE" | jq .
}

print_help() {
  echo "🧠 Comandos disponíveis:
  manus next               → Mostrar próxima tarefa
  manus done <ID>          → Marcar tarefa como concluída
  manus prompt <componente>→ Gerar prompt para model|service|controller
  manus status             → Ver status atual do projeto
  manus help               → Mostrar esta ajuda
"
}

case "$1" in
  next)
    print_next_task
    ;;
  done)
    mark_task_done "$2"
    ;;
  prompt)
    generate_prompt "$2"
    ;;
  status)
    print_status
    ;;
  help | *)
    print_help
    ;;
esac
