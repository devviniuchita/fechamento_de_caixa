name: Vercel Deploy

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: vercel-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preview:
    name: Preview (PR)
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Deploy Preview to Vercel
        id: deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_API_KEY: ${{ secrets.VERCEL_API_KEY }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          TOKEN="$VERCEL_TOKEN"
          if [ -z "$TOKEN" ]; then TOKEN="$VERCEL_API_KEY"; fi
          if [ -z "$TOKEN" ] || [ -z "$VERCEL_PROJECT_ID" ]; then
            echo "skip=true" >> "$GITHUB_OUTPUT"
            echo "Vercel secrets ausentes; pulando deploy de preview."
            exit 0
          fi
          vercel pull --yes --environment=preview --token "$TOKEN" --project "$VERCEL_PROJECT_ID"
          DEPLOY_URL=$(vercel deploy . --token "$TOKEN" --project "$VERCEL_PROJECT_ID")
          echo "url=$DEPLOY_URL" >> "$GITHUB_OUTPUT"
          echo "skip=false" >> "$GITHUB_OUTPUT"

      - name: Comentar URL no PR
        if: ${{ steps.deploy.outputs.skip == 'false' && steps.deploy.outputs.url != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ github.event.number }}"
          BODY="ðŸš€ Preview Vercel disponÃ­vel%0A%0Aâœ… URL: ${{ steps.deploy.outputs.url }}%0AðŸ§© Commit: ${{ github.sha }}"
          gh pr comment "$PR_NUMBER" --body "$BODY"

  production:
    name: Production (main)
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Deploy Production to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_API_KEY: ${{ secrets.VERCEL_API_KEY }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          TOKEN="$VERCEL_TOKEN"
          if [ -z "$TOKEN" ]; then TOKEN="$VERCEL_API_KEY"; fi
          if [ -z "$TOKEN" ] || [ -z "$VERCEL_PROJECT_ID" ]; then
            echo "Segredos do Vercel nÃ£o configurados; nÃ£o Ã© possÃ­vel fazer deploy de produÃ§Ã£o."
            exit 1
          fi
          vercel pull --yes --environment=production --token "$TOKEN" --project "$VERCEL_PROJECT_ID"
          vercel deploy . --prod --token "$TOKEN" --project "$VERCEL_PROJECT_ID"
          echo "ðŸš€ Production deployed: $DEPLOY_URL"
