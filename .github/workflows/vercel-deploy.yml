name: Vercel Deploy

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: vercel-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preview:
    name: Preview (PR)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel Project Settings (preview)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"

      - name: Deploy to Vercel (preview)
        id: deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          # Deploy the static site under ./public as a Preview deployment
          DEPLOY_URL=$(vercel deploy ./public --token "$VERCEL_TOKEN")
          echo "url=$DEPLOY_URL" >> "$GITHUB_OUTPUT"

      - name: Comment Preview URL on PR
        if: steps.deploy.outputs.url != ''
        uses: actions/github-script@v7
        with:
          script: |
            const url = core.getInput('url', { required: false }) || process.env.URL || '${{ steps.deploy.outputs.url }}';
            const body = `ðŸš€ Preview Vercel: ${url}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
          result-encoding: string

  production:
    name: Production (main)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel Project Settings (production)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel pull --yes --environment=production --token "$VERCEL_TOKEN"

      - name: Build (optional)
        if: false # Static site in ./public, no build step needed. Flip to true if you add a build.
        run: |
          vercel build --token "$VERCEL_TOKEN"

      - name: Deploy to Vercel (production)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          vercel deploy ./public --prod --token "$VERCEL_TOKEN"
