name: Vercel Deploy

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: vercel-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preview:
    name: Preview (PR)
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Vercel CLI and GitHub CLI
        run: |
          npm i -g vercel@latest
          # GitHub CLI already available in runner

      - name: Prepare and Deploy to Vercel (Preview)
        id: deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check for Vercel credentials
          TOKEN="${{ secrets.VERCEL_TOKEN }}"
          if [ -z "$TOKEN" ]; then TOKEN="${{ secrets.VERCEL_API_KEY }}"; fi
          PROJECT="${{ secrets.VERCEL_PROJECT_ID }}"
          
          if [ -z "$TOKEN" ] || [ -z "$PROJECT" ]; then
            echo "‚ö†Ô∏è  Vercel secrets not configured. Skipping deployment."
            echo "Configure VERCEL_TOKEN (or VERCEL_API_KEY) and VERCEL_PROJECT_ID in GitHub Secrets."
            echo "skip=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          
          echo "‚úÖ Vercel credentials found. Starting preview deployment..."
          
          # Pull Vercel project settings
          vercel pull --yes --environment=preview --token "$TOKEN" --project "$PROJECT"
          
          # Deploy to Vercel
          DEPLOY_URL=$(vercel deploy . --token "$TOKEN" --project "$PROJECT")
          echo "url=$DEPLOY_URL" >> "$GITHUB_OUTPUT"
          echo "skip=false" >> "$GITHUB_OUTPUT"
          
          echo "üöÄ Preview deployed: $DEPLOY_URL"

      - name: Comment PR with Preview URL
        if: ${{ steps.deploy.outputs.skip == 'false' && steps.deploy.outputs.url != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DEPLOY_URL="${{ steps.deploy.outputs.url }}"
          PR_NUMBER="${{ github.event.number }}"
          
          # Use GitHub CLI to comment on PR
          gh pr comment "$PR_NUMBER" --body "üöÄ **Preview Vercel Deploy**

          ‚úÖ Deployed successfully: $DEPLOY_URL
          
          üìù Commit: ${{ github.sha }}
          üîó [View deployment]($DEPLOY_URL)"

  production:
    name: Production (main)
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Deploy to Vercel (Production)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check for Vercel credentials
          TOKEN="${{ secrets.VERCEL_TOKEN }}"
          if [ -z "$TOKEN" ]; then TOKEN="${{ secrets.VERCEL_API_KEY }}"; fi
          PROJECT="${{ secrets.VERCEL_PROJECT_ID }}"
          
          if [ -z "$TOKEN" ] || [ -z "$PROJECT" ]; then
            echo "‚ùå Vercel secrets not configured. Cannot deploy to production."
            echo "Configure VERCEL_TOKEN (or VERCEL_API_KEY) and VERCEL_PROJECT_ID in GitHub Secrets."
            exit 1
          fi
          
          echo "‚úÖ Vercel credentials found. Starting production deployment..."
          
          # Pull Vercel project settings
          vercel pull --yes --environment=production --token "$TOKEN" --project "$PROJECT"
          
          # Deploy to production
          DEPLOY_URL=$(vercel deploy . --prod --token "$TOKEN" --project "$PROJECT")
          
          echo "üöÄ Production deployed: $DEPLOY_URL"
          echo "‚úÖ Deployment completed successfully."
